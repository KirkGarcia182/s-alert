/*! 
   Author: Kirk Garcia
   License: MIT
   GitHub: https://github.com/KirkGarcia182/s-alert,
*/
let t = $.ct /*html*/`<style> *{ box-sizing: border-box; } .bar{ display: flex; width: 5px; } .wrapper{ display: flex; flex-direction: column; background-color: rgba(0,0,0,0.5); color: var(--color); flex-grow: 1; } .header{ display: flex; flex-direction: row; position: relative; } .name{ flex-grow: 1; padding: 8px 16px 0px 16px; font-size: calc(var(--font-size) + 2px); font-weight: bold; margin-right: 40px; } .close{ display: flex; position: absolute; width: 40px; height: 40px; justify-content: center; align-items: center; top: 0; right: 0; font-size: calc(var(--font-size) + 5px); cursor: pointer; } .close:hover{ color: black; } hr{ width: 95%; border-radius: 50%; border-color: var(--color); } .message{ padding: 0px 16px 8px 16px; text-align: justify; font-size: calc(var(--font-size) - 1px); } .loading-bar{ height: 7px; width: 100%; background-color: rgba(255,255,255,0.5); } .loading-bar .bar{ width: 100%; height: inherit; background-color: var(--bar-bgColor); } :host { --bgColor: silver; --color: white; --bar-bgColor: white; display: flex; flex-direction: row; position: relative; background-color: var(--bgColor); color: var(--color); margin-top: 5px; opacity: 0; transition: all 0.5s; z-index: 500; } :host(.danger){ --bgColor: #ff1100; } :host(.warning){ --bgColor: #ffe600; } :host(.success){ --bgColor: #00ff08; } :host(.info){ --bgColor: #008cff; } :host(.remove){ opacity: 0; } :host(.add){ opacity: 1;}</style><div class="wrapper"> <div class="header"> <div class="name"></div> <div class="close">&times;</div> </div> <hr> <div class="message"></div> <div class="loading-bar"> <div class="bar"></div> </div></div><div class="bar"></div>`;
class SimpleAlert extends HTMLElement{constructor(){super();let a=this;a.root=a.shadow({mode:"open"}),a.root.append(t.content.clone(!0)),a.name=a.root.qs(".name"),a.message=a.root.qs(".message"),a.close=a.root.qs(".close"),a.loadingBar=a.root.qs(".loading-bar .bar"),a.hovering=!1,a.animationID,a.close.on("click",()=>{a.changeClass("add","remove"),setTimeout(()=>{a.remove()},500),cancelAnimationFrame(a.animationID)}),a.on("mouseenter",()=>a.hovering=!0),a.on("mouseleave",()=>a.hovering=!1)}connectedCallback(){let a,b,c,d=this,e=d._props.type,f=`${e.charAt(0).toUpperCase()}${e.substring(1,e.length)}`,g=d._props.message,h=parseInt(d._props.time),i=Date.now();d.name.html(f),d.message.html(g),d.addClass(`${e} add`),setTimeout(()=>{function f(){b=Date.now(),a=b-i,c=g*(a/h),0>=j?(d.loadingBar.css("width","0px"),d.close.trigger("click")):(!d.hovering&&(j-=c,d.loadingBar.css("width",`${j}px`)),i=b,d.animationID=requestAnimationFrame(f))}d.addClass(`${e} add`);let g=d.loadingBar.offsetWidth,j=g;d.animationID=requestAnimationFrame(f)},1)}props(a){let b=this;return b._props=a,b}}dce("s-alert",SimpleAlert);
